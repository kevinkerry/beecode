// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.newland.beecode.domain;

import com.newland.beecode.domain.DictView;
import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;

privileged aspect DictViewDataOnDemand_Roo_DataOnDemand {
    
    declare @type: DictViewDataOnDemand: @Component;
    
    private Random DictViewDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<DictView> DictViewDataOnDemand.data;
    
    public DictView DictViewDataOnDemand.getNewTransientDictView(int index) {
        com.newland.beecode.domain.DictView obj = new com.newland.beecode.domain.DictView();
        obj.setKeyName("keyName_" + index);
        obj.setKeyValue("keyValue_" + index);
        obj.setKeyDesc("keyDesc_" + index);
        return obj;
    }
    
    public DictView DictViewDataOnDemand.getSpecificDictView(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        DictView obj = data.get(index);
        return DictView.findDictView(obj.getId());
    }
    
    public DictView DictViewDataOnDemand.getRandomDictView() {
        init();
        DictView obj = data.get(rnd.nextInt(data.size()));
        return DictView.findDictView(obj.getId());
    }
    
    public boolean DictViewDataOnDemand.modifyDictView(DictView obj) {
        return false;
    }
    
    public void DictViewDataOnDemand.init() {
        data = com.newland.beecode.domain.DictView.findDictViewEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'DictView' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.newland.beecode.domain.DictView>();
        for (int i = 0; i < 10; i++) {
            com.newland.beecode.domain.DictView obj = getNewTransientDictView(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
