// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.newland.beecode.domain;

import com.newland.beecode.domain.Partner;
import com.newland.beecode.domain.PartnerCatalogDataOnDemand;
import java.util.List;
import java.util.Random;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect PartnerDataOnDemand_Roo_DataOnDemand {
    
    declare @type: PartnerDataOnDemand: @Component;
    
    private Random PartnerDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Partner> PartnerDataOnDemand.data;
    
    @Autowired
    private PartnerCatalogDataOnDemand PartnerDataOnDemand.partnerCatalogDataOnDemand;
    
    public Partner PartnerDataOnDemand.getNewTransientPartner(int index) {
        com.newland.beecode.domain.Partner obj = new com.newland.beecode.domain.Partner();
        java.lang.String partnerNo = "partnerNo_" + index;
        if (partnerNo.length() > 32) {
            partnerNo  = partnerNo.substring(0, 32);
        }
        obj.setPartnerNo(partnerNo);
        java.lang.String partnerName = "partnerName_" + index;
        if (partnerName.length() > 32) {
            partnerName  = partnerName.substring(0, 32);
        }
        obj.setPartnerName(partnerName);
        obj.setPartnerCatalog(partnerCatalogDataOnDemand.getRandomPartnerCatalog());
        return obj;
    }
    
    public Partner PartnerDataOnDemand.getSpecificPartner(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Partner obj = data.get(index);
        return Partner.findPartner(obj.getId());
    }
    
    public Partner PartnerDataOnDemand.getRandomPartner() {
        init();
        Partner obj = data.get(rnd.nextInt(data.size()));
        return Partner.findPartner(obj.getId());
    }
    
    public boolean PartnerDataOnDemand.modifyPartner(Partner obj) {
        return false;
    }
    
    public void PartnerDataOnDemand.init() {
        data = com.newland.beecode.domain.Partner.findPartnerEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Partner' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.newland.beecode.domain.Partner>();
        for (int i = 0; i < 10; i++) {
            com.newland.beecode.domain.Partner obj = getNewTransientPartner(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
