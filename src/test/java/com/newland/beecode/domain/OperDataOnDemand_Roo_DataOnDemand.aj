// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.newland.beecode.domain;

import com.newland.beecode.domain.Oper;
import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;

privileged aspect OperDataOnDemand_Roo_DataOnDemand {
    
    declare @type: OperDataOnDemand: @Component;
    
    private Random OperDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Oper> OperDataOnDemand.data;
    
    public Oper OperDataOnDemand.getNewTransientOper(int index) {
        com.newland.beecode.domain.Oper obj = new com.newland.beecode.domain.Oper();
        java.lang.String operName = "operName_" + index;
        if (operName.length() > 24) {
            operName  = operName.substring(0, 24);
        }
        obj.setOperName(operName);
        obj.setOperPwd("operPwd_" + index);
        obj.setEnabled(true);
        obj.setGenTime(new java.util.GregorianCalendar(java.util.Calendar.getInstance().get(java.util.Calendar.YEAR), java.util.Calendar.getInstance().get(java.util.Calendar.MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.DAY_OF_MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.HOUR_OF_DAY), java.util.Calendar.getInstance().get(java.util.Calendar.MINUTE), java.util.Calendar.getInstance().get(java.util.Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime());
        return obj;
    }
    
    public Oper OperDataOnDemand.getSpecificOper(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Oper obj = data.get(index);
        return Oper.findOper(obj.getOperNo());
    }
    
    public Oper OperDataOnDemand.getRandomOper() {
        init();
        Oper obj = data.get(rnd.nextInt(data.size()));
        return Oper.findOper(obj.getOperNo());
    }
    
    public boolean OperDataOnDemand.modifyOper(Oper obj) {
        return false;
    }
    
    public void OperDataOnDemand.init() {
        data = com.newland.beecode.domain.Oper.findOperEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Oper' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.newland.beecode.domain.Oper>();
        for (int i = 0; i < 10; i++) {
            com.newland.beecode.domain.Oper obj = getNewTransientOper(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
