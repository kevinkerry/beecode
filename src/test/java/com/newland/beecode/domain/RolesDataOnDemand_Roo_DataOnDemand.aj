// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.newland.beecode.domain;

import com.newland.beecode.domain.Roles;
import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;

privileged aspect RolesDataOnDemand_Roo_DataOnDemand {
    
    declare @type: RolesDataOnDemand: @Component;
    
    private Random RolesDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Roles> RolesDataOnDemand.data;
    
    public Roles RolesDataOnDemand.getNewTransientRoles(int index) {
        com.newland.beecode.domain.Roles obj = new com.newland.beecode.domain.Roles();
        java.lang.String roleNo = "roleNo_" + index;
        if (roleNo.length() > 16) {
            roleNo  = roleNo.substring(0, 16);
        }
        obj.setRoleNo(roleNo);
        java.lang.String roleName = "roleName_" + index;
        if (roleName.length() > 24) {
            roleName  = roleName.substring(0, 24);
        }
        obj.setRoleName(roleName);
        return obj;
    }
    
    public Roles RolesDataOnDemand.getSpecificRoles(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Roles obj = data.get(index);
        return Roles.findRoles(obj.getId());
    }
    
    public Roles RolesDataOnDemand.getRandomRoles() {
        init();
        Roles obj = data.get(rnd.nextInt(data.size()));
        return Roles.findRoles(obj.getId());
    }
    
    public boolean RolesDataOnDemand.modifyRoles(Roles obj) {
        return false;
    }
    
    public void RolesDataOnDemand.init() {
        data = com.newland.beecode.domain.Roles.findRolesEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Roles' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.newland.beecode.domain.Roles>();
        for (int i = 0; i < 10; i++) {
            com.newland.beecode.domain.Roles obj = getNewTransientRoles(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
