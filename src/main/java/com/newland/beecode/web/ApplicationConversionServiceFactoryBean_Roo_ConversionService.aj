// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.newland.beecode.web;

import com.newland.beecode.domain.CoupontCtrl;
import com.newland.beecode.domain.DictView;
import com.newland.beecode.domain.Organization;
import com.newland.beecode.domain.Roles;
import java.lang.String;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    Converter<CoupontCtrl, String> ApplicationConversionServiceFactoryBean.getCoupontCtrlConverter() {
        return new Converter<CoupontCtrl, String>() {
            public String convert(CoupontCtrl source) {
                return new StringBuilder().append(source.getCouponId()).append(" ").append(source.getSerialNo()).append(" ").append(source.getTraceNo()).toString();
            }
        };
    }
    
    Converter<Roles, String> ApplicationConversionServiceFactoryBean.getRolesConverter() {
        return new Converter<Roles, String>() {
            public String convert(Roles source) {
                return new StringBuilder().append(source.getRoleNo()).append(" ").append(source.getRoleName()).toString();
            }
        };
    }
    
    Converter<DictView, String> ApplicationConversionServiceFactoryBean.getDictViewConverter() {
        return new Converter<DictView, String>() {
            public String convert(DictView source) {
                return new StringBuilder().append(source.getKeyName()).append(" ").append(source.getKeyValue()).append(" ").append(source.getKeyDesc()).toString();
            }
        };
    }
    
    Converter<Organization, String> ApplicationConversionServiceFactoryBean.getOrganizationConverter() {
        return new Converter<Organization, String>() {
            public String convert(Organization source) {
                return new StringBuilder().append(source.getOrganizationDN()).append(" ").append(source.getOrganizationCN()).toString();
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getCoupontCtrlConverter());
        registry.addConverter(getRolesConverter());
        registry.addConverter(getDictViewConverter());
        registry.addConverter(getOrganizationConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
